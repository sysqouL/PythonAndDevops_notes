"""
"""

"""
    Использование Pytest для модульного тестирования.
    Вот соглашения, которым будет следовать утилита pytest при обнаружении тестов.
    - Каталог с тестами должен называться tests.
    - Названия файлов тестов должны начинаться с test, например test_basic.py, либо заканчиваться на test.py.
    - Названия функций тестов должны начинаться с test_, например def testsimple():.
    - Названия классов тестов должны начинаться на Test, например class TestSimple.
    - Методы тестов придерживаются тех же соглашений, что и функции, и должны начинаться на test_, например, def test_method(self):.
"""

"""
    Подход, специфичный для pytest, заключается в добавлении пустого файла conftest.py к корневому каталогу проекта. 
    pytest ищет файлы с таким именем и, обнаруживая их, помечает содержащий каталог как проект для тестирования, и 
    добавляет каталог в путь Python во время выполнения теста
"""

def test_simple():
    assert True

def test_fails():
    assert False

"""


import pytest
from my_module import string_to_bool

true_values = ['yes', '1', 'Yes', 'TRUE', 'TruE', 'True', 'true']

class TestStrToBool(object):

        @pytest.mark.parametrize('value', true_values)
        def test_it_detects_truish_strings(self, value)
            assert string_to_bool(value)
            
    Здесь происходит несколько вещей. Вначале, чтобы использовать модуль pytest.mark.parametrize, импортируется 
    pytest (фреймворк), далее описываются true_values в виде переменной (списка) со всеми значениями, которые должны 
    давать один результат, и, наконец, все тестовые методы заменяются одним, в котором применяется декоратор parametrize, 
    объявляющий два аргумента. Первый представляет собой строку value, а второй — название ранее объявленного списка. 
    Выглядит это немного странно, но, по существу, просто указывает фреймворку, что в качестве аргумента в тестовом методе 
    необходимо использовать название value. Именно отсюда и берется аргумент value!
    И хотя при запуске выводится довольно много информации, но в ней четко показано, какие значения передаются. 
    Выглядит все практически как один тест, клонированный для каждого из переданных значений
"""